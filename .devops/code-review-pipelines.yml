# Azure DevOps pipeline to build, check source codes and run tests.
#
# To make Danger JS run on a pull request you need to add the following pipeline 
# variable and set it with a GitHub access token (scope public_repo); otherwise 
# set its value to 'skip' without marking it secret: 
# - DANGER_GITHUB_API_TOKEN
# 

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger: none

# Execute agents (jobs) on latest Ubuntu version.
# To change OS for a specific, ovverride "pool" attribute inside the job definition
pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: pagopaCommons
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v14
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: Build
    jobs:
      - job: make_build
        steps:
        - template: templates/node-job-setup/template.yaml@pagopaCommons
        - script: |
            yarn build
          displayName: 'Build'

  - stage: Static_analysis
    jobs:
      - job: lint
        steps:
        - template: templates/node-job-setup/template.yaml@pagopaCommons
        - script: |
            yarn lint
          displayName: 'Lint'

      - job: danger
        condition: ne(variables['DANGER_GITHUB_API_TOKEN'], 'skip')
        steps:
          - template: templates/node-job-setup/template.yaml@pagopaCommons
          - bash: |
              yarn danger ci
            env:
              DANGER_GITHUB_API_TOKEN: '$(DANGER_GITHUB_API_TOKEN)'
            displayName: 'Danger CI'

  - stage: Test
    jobs:
      - job: unit_tests
        steps:
        - template: templates/node-job-setup/template.yaml@pagopaCommons
        - script: |
            yarn generate
          displayName: 'Generate definitions'
        - script: |
            yarn test:coverage
          displayName: 'Unit tests exec'
        - bash: |
            bash <(curl -s https://codecov.io/bash)
          displayName: 'Code coverage'
