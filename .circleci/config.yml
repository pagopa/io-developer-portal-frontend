# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2

aliases:
  - &working_directory
    ~/repo

  - &restore_cache
    keys:
    - v1-dependencies-{{ checksum "yarn.lock" }}
    # fallback to using the latest cache if no exact match is found
    - v1-dependencies-

  - &yarn_install
    name: Install Packages
    command: yarn install

  - &save_cache
    paths:
      - node_modules
    key: v1-dependencies-{{ checksum "yarn.lock" }}

defaults: &defaults
  docker:
    # specify the version you desire here
    - image: circleci/node:8

  working_directory: *working_directory

jobs:

  lint:
    <<: *defaults

    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *yarn_install
      - run:
          name: Lint
          command: yarn lint   

  danger:
     <<: *defaults
     steps:
       - checkout
       - restore_cache: *restore_cache
       - run: *yarn_install
       - run: '[ -z "$DANGER_GITHUB_API_TOKEN" ] || yarn danger ci'

  build:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Check versions
          command: |
            node --version
            yarn --version
            docker --version

      # Download and cache dependencies
      - restore_cache: *restore_cache
      - run: *yarn_install
      - save_cache: *save_cache

      - run:
          name: Build
          command: yarn build

      # Persist the specified paths (workspace/echo-output) into the workspace 
      # for use in downstream job. Must be an absolute path, or relative path 
      # from working_directory. This is a directory on the container which is 
      # taken to be the root directory of the workspace.
      - persist_to_workspace:
          root: *working_directory
          paths:
            - dist

  deploy-github-pages:
    <<: *defaults

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache: *restore_cache
        
      - run:
          name: Deploy GitHub Pages
          command: |
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            yarn build
            yarn deploy

# Workflows enable multiple jobs in parallel
workflows:
  version: 2

  build:
    jobs:
      - build
      - lint
      - danger

  deploy:
    jobs:
      - build:
          # Note: The build job must also have a filters tags section, as it 
          # is a transient dependency of the deploy job.
          filters:
            branches:
              only: master
            tags:
              only: /.*/

      # - deploy-github-pages:
      #     requires:
      #       - build
